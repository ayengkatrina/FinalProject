@model PasteBook.CreateAccountViewModel


@using (Html.BeginForm("Register", "PasteBook", FormMethod.Post, new { enctype = "multipart/form-data", name = "REGISTRATION_FORM", id = "REGISTRATION_FORM" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">


        <div class="panel-group">
            <div class="panel panel-default">
                <div class="panel-heading"><h4>Create a new Account</h4></div>
                <div class="panel-body">


                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group col-md-6">
                        @Html.Label("Required fields (*)")



                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.Label("*First Name ", new { @class = "control-label col-md-12" })

                            </div>
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.User.FIRST_NAME, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.User.FIRST_NAME, "", new { @class = "text-danger" })
                                <span id="txtFirstNameMessage" class="text-danger"></span>

                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.Label("*Last Name", new { @class = "control-label col-md-12" })
                            </div>
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.User.LAST_NAME, new { id = "txtLastName", htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.User.LAST_NAME, "", new { @class = "text-danger" })
                                <span id="txtLastNameMessage" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.Label("*Birthday", new { @class = "control-label col-md-12" })
                            </div>
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.User.BIRTHDAY, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                                @Html.ValidationMessageFor(model => model.User.BIRTHDAY, "", new { @class = "text-danger" })
                                <span id="txtBirthday" class="text-danger"></span>
                            </div>
                        </div>



                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.Label("Country", new { @class = "control-label col-md-12" })
                            </div>
                            <div class="col-md-8">
                                @Html.DropDownListFor(x => x.User.COUNTRY_ID, new SelectList(ViewBag.Country,"ID", "COUNTRY"), "---Select Country---", new { @class = "form-control" })

                            </div>
                        </div>


                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.Label("Mobile No", new { @class = "control-label col-md-12" })
                            </div>
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.User.MOBILE_NO, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.User.MOBILE_NO, "", new { @class = "text-danger" })
                                <span id="txtMobileNumber" class="text-danger"></span>
                            </div>
                        </div>



                        <div class="form-group">

                            <div class="col-md-4">
                                @Html.Label("Gender", new { @class = "control-label col-md-12" })
                            </div>
                            <div class="col-md-8">
                                <div class="col-md-12">

                                    @Html.RadioButtonFor(model => model.User.GENDER, "M")
                                    @Html.Label("Male", new { @class = "control-label" })

                                </div>
                                <div class="col-md-12">


                                    @Html.RadioButtonFor(model => model.User.GENDER, "F")
                                    @Html.Label("Female", new { @class = "control-label" })
                                </div>


                                @Html.ValidationMessageFor(model => model.User.GENDER, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>

                    <div id="divCredentials" class="form-horizontal col-md-6">
                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.Label("*User Name", new { @class = "control-label col-md-12" })
                            </div>
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.User.USER_NAME, new { id = "txtUserName", htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.User.USER_NAME, "", new { @class = "text-danger" })
                                @Html.ValidationMessage("usernameExist", new { @class = "text-danger" })

                                <span id="txtUserNameMessage" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.Label("*Email Address", new { @class = "control-label col-md-12" })

                            </div>
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.User.EMAIL_ADDRESS, new { id = "txtEmail", htmlAttributes = new { @class = "form-control", @type = "email" } })
                                @Html.ValidationMessageFor(model => model.User.EMAIL_ADDRESS, "", new { @class = "text-danger" })
                                @Html.ValidationMessage("emailExist", new { @class = "text-danger" })
                                <span id="txtEmailMessage" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.Label("*Password", new { @class = "control-label col-md-12" })
                            </div>
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.User.PASSWORD, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                                @Html.ValidationMessageFor(model => model.User.PASSWORD, "", new { @class = "text-danger" })
                                <span id="txtPasswordMessage" class="text-danger"></span>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-4">
                                @Html.Label("*Confirm Password", new { @class = "control-label col-md-12" })
                            </div>
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.CONFIRM_PASSWORD, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                                @Html.ValidationMessageFor(model => model.CONFIRM_PASSWORD, "", new { @class = "text-danger" })
                                <span id="txtConfirmPasswordMatchMessage" class="text-danger"></span>

                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-4 col-md-8">
                                <input type="submit" value="Create" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

}

@{
    @Scripts.Render("~/bundles/jquery");
    <script>


        $(document).ready(function () {
            $("#CONFIRM_PASSWORD").blur(ValidatePasswordMatch);

            function ValidatePasswordMatch() {
                var password = $("#User_PASSWORD");
                var confirmPassword = password;

                if (password.is(confirmPassword)) {
                    $("#txtConfirmPasswordMatchMessage").text("");
                }
                else  {
                    $("#txtConfirmPasswordMatchMessage").text("Password did not match");
                }
            }



        });
    </script>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $(function () {

            //www.sitepoint.com/basic-jquery-form-validation-tutorial/
            $("form[name='REGISTRATION_FORM']").validate({

                rules: {

                    User_FIRST_NAME: {
                        required: true,
                        maxlenght: 50
                    },
                    User_LAST_NAME: {
                        required: true,
                        maxlenght: 50
                    },

                    User_USER_NAME: {
                        required: true,
                        maxlenght: 50,
                    },

                    User_EMAIL_ADDRESS: {
                        required: true,
                        maxlenght: 50,

                        email: true,


                    },
                    User_PASSWORD: {
                        required: true,
                        maxlenght: 50,

                    },

                    CONFIRM_PASSWORD: {
                        required: true,
                        maxlenght: 50,
                        equalTo: "#User_PASSWORD"

                    }


                },

                messages: {
                    User_FIRST_NAME: {
                        required: "Please enter your first name.",
                        maxlenght: "First name must not be longer than 50 characters."
                    },

                    User_LAST_NAME: {
                        required: "Please enter your last name.",
                        maxlenght: "Last name must not be longer than 50 characters"
                    },
                    User_PASSWORD: {
                        required: "Please enter a password",
                        maxlenght: "Password must not be longer than 50 characters"
                    },

                    CONFIRM_PASSWORD: {
                        required: "Please enter a confirmation password",
                        maxlenght: "Confirmation password must not be longer than 50 characters",
                        equalTo: "Password did not match"
                    },
                    User_EMAIL_ADDRESS: {
                        required: "Please enter an email address.",
                        maxlenght: "Email address must not be longer than 50 characters",
                        email: "Please input a valid email address"
                    },


                    submitHandler: function (form) {
                        form.submit();
                    }
                } });
        });

    </script>
}


